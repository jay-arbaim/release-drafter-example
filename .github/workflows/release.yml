name: Release Drafter

on:
  push:
    branches:
      - main

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Set up git config
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter/release-config.yml
          # release target branch
          commitish: main
          # publish: true # publish release imeediately or not(draft release)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip
      - name: Make a bumping commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_FILE: VERSION.txt
          VERSION: ${{ steps.create_release.outputs.tag_name }}
        run: |
          # Update the changelog
          npx github-release-notes changelog -o --token=$GITHUB_TOKEN

          # Update the version file
          echo ${VERSION#v-} >| $VERSION_FILE

          # Commit changes
          git add CHANGELOG.md $VERSION_FILE
          git commit -m "Bump version to $VERSION"

          # Push changes
          git push origin ${{ github.ref_name }}
